#: # Appveyor configuration ([source](../appskeleton/appveyor.yml))
#: The AppVeyor configuration tells AppVeyor how to build the app.
#: See the [AppVeyor documentation](https://www.appveyor.com/docs/appveyor-yml/)
#: for specific questions.
#: 
#: If you use this skeleton, you should only need to edit the following keys:
#: - `version`: the package version
#: - `artifacts.name`: the package name
#: - `deploy.username`: your username, even if you commit to the official repository
#: - `deploy.api_key.secure`: your *encrypted* API key. Use the
#:   [encryption utility](https://ci.appveyor.com/tools/encrypt) to encrypt it.
#: - `deploy.package`: the package name on [BinTray](https://bintray.com)
version: 1.12.0.{build}
pull_requests:
  do_not_increment_build_number: true
shallow_clone: true
#: ## Environment variables
#:
#: Variables (`VAR`) defined here can be used in the build scripts (Windows: `%VAR%`, Linux: `$VAR`).
#: 
#: They can also be overridden in the build tool (`ci_console.html` in your local
#: labstreaminglayer/labstreaminglayer repo) to build with a special configuration.
environment:
  lslversion: 1.12.0
  VCVER: 14.0
  QTVER: 5.11.0
  QTCOMPILER: msvc2015_64
  ARCH: x64
  CMakeArgs: ""
  DODEPLOY: false
#: ## `install` section
#:
#: List steps to prepare the build environment here. You can prefix steps to be run only on Windows
#: with `- cmd: ` and Linux-only steps with `- sh`.
install:
- cmd: appveyor DownloadFile https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-win.zip -FileName ninja.zip
- cmd: appveyor DownloadFile https://bintray.com/labstreaminglayer/LSL/download_file?file_path=liblsl-%lslversion%-Win64-MSVC%VCVER%.7z -FileName liblsl_x64.7z
- cmd: 7z x ninja.zip -oC:\projects\deps\ninja > nul
- cmd: 7z x liblsl_x64.7z
- cmd: set PATH=C:\projects\deps\ninja;%PATH%
- cmd: ninja --version
#: ## `build_script`
#: 
#: Steps to build the app and copy the binaries to an "installation" folder.
#:
#: On Windows, we call the compiler configuration script, afterwards we create a
#: build configuration in a newly created build folder.
#:
#: In case an app needs Qt and Boost, we set the paths as they are on the AppVeyor
#: VMs (see [build environment](https://www.appveyor.com/docs/build-environment/)
#: for a list of preinstalled software) and build everything.
build_script:
- cmd: call "C:\Program Files (x86)\Microsoft Visual Studio %VCVER%\VC\vcvarsall.bat" %ARCH%
- mkdir build
- cd build
- cmd: cmake -G Ninja -DQt5_DIR=C:/Qt/%QTVER%/%QTCOMPILER%/lib/cmake/Qt5 -DBOOST_ROOT=C:/Libraries/boost_1_67_0 -DCMAKE_BUILD_TYPE=Release -DLSL_INSTALL_ROOT=LSL/ %CMakeArgs% ../
- cmake --build . --config Release --target install
#: ## Artifacts
#: 
#: If you want the built binaries in addition to the build log, you can define
#: which paths (`path`) get compressed to which archives (`name`). You can use
#: environment variables as placeholders (`$(lslversion)`).
artifacts:
- path: build/install
  name: BestPracticesGUI_$(lslversion)-Win64
#: ## Deployment
#:
#: To upload ([deploy](https://www.appveyor.com/docs/deployment/)) the previously
#: generated artifacts, you have to tell AppVeyor where and how.
#: 
#: You can safely register somewhere and
#: [encrypt](https://ci.appveyor.com/tools/encrypt) your credentials so only the
#: build service can decrypt them.
deploy:
- provider: BinTray
  username: tstenner
  api_key:
    secure: Fo9tIQnGjVnCXB3euItvYrt85A5O9FPqq7LEpsdOuwW+eOg1rwA5Q1HLp4yWDXAl
  subject: labstreaminglayer
  version: $(lslversion)
  repo: LSL
  package: BestPracticesGUI
  publish: true
  override: true
  on:
    dodeploy: true
